
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ###UPDATE EVERY 6 HOURS###
> 
> 
> library('RODBC')
> source("C:/Python/19OctSimulator/functionDennisPricingModelARMA11.R")#todo: add functionDennis...
> 
> #Update stock_forecast table every 6 hr
> 
> forecasted_data=ForecastedData();
Warning messages:
1: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
2: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
3: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
4: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
5: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
6: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
7: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
8: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
9: In min(Mod(polyroot(c(1, -model$ar)))) :
  no non-missing arguments to min; returning Inf
> 
> for (i in 1:41){
+   for (j in 1:72){
+     con <- odbcConnect("AnalyticConn", uid = "prodService", pwd = "gtpprod#1234")
+     index <- sqlQuery(con, sprintf("UPDATE [index_value] SET [index] = %d", 1))
+     query=sprintf("UPDATE [MarketData].[dbo].[stock_forecast] SET [%s]=%f WHERE [stock_id]='%s'",as.character(j), round(as.numeric(forecasted_data[[i]][j+1]),digits = 2),forecasted_data[[i]][1])
+     sqlQuery(con, query)
+   }
+ }
There were 50 or more warnings (use warnings() to see the first 50)
> 
> proc.time()
   user  system elapsed 
   7.21    4.32  134.76 
There were 37 warnings (use warnings() to see them)
